New technologies make it possible to measure activity from many neurons simultaneously. One approach is to analyze simultaneously recorded neurons individually, then group together neurons which increase their activity during similar behaviors into an “ensemble.” However, this notion of an ensemble ignores the ability of neurons to act collectively and encode and transmit information in ways that are not reflected by their individual activity levels. We used microendoscopic GCaMP imaging to measure prefrontal activity while mice were either alone or engaged in social interaction. We developed an approach that combines a neural network classifier and surrogate . Casual inspection of calcium traces revealed that some neurons were more active during epochs of social interaction . Correspondingly, aligning calcium traces to the onset of social interaction revealed many neurons that either increased or decreased their activity levels at the onset of interaction . Fluorescence traces were converted to binary event rasters . As a population, imaged neurons were more active during social interaction . There was a bimodal distribution of cells that were significantly more . These correspond to conventionally defined neuronal ensembles, i.e., groups of neurons that increased or decreased their activity levels during social interaction. Download: PPT PowerPoint slide PNG larger image TIFF original image Fig 1. Social interaction modulates activity levels within prefrontal ensembles.  and “units” to refer to simulated elements within the network. The network consisted of a hidden layer containing 1,000 units. We chose this number because it is both an order of magnitude larger than the number of input neurons and an order of magnitude smaller than the number of frames available for training  We constructed a neural network consisting of a single hidden layer . Classifier performance is optimal for intermediate connection probabilities Classifier performance was strongly dependent on the probability that each input neuron was connected to each hidden unit. For the 8/10 datasets that could be classified above chance, classifier performance  for a connection probability of 0.3. Accuracy decreased dramatically when the connection probability increased to 0.5 indicating that connection probabilities approximately 0.2 to 0.4 are optimal. We also validated classifier performance by training and testing on surrogate datasets that were generated by “swap shuffling” our original datasets. We created “swap-shuffled” surrogate datasets by randomly swapping blocks of activity between neurons . Prefrontal neurons that drive classifier performance change their correlations during social behavior Next, we examined connections in trained networks to reveal factors which enable them to successfully classify social versus home cage behavior . Therefore, we hypothesized that there might be important differences in the pattern of input to hidden units, depending on whether those hidden units have large positive or negative output weights. Download: PPT PowerPoint slide PNG larger image TIFF original image Fig 3. Classifier weights reveals an ensemble that increases correlations during social behavior and detects social behavior. . For comparison, we also defined the 25 hidden layer units with the weights closest to 0 as “neutral units.” For each pair of hidden units, we computed the similarity between their inputs . We then plotted the average input similarity of each hidden unit to either the social or home cage units  or the neutral units . Social and home cage units tended to receive input from the same prefrontal neurons as other hidden layer units with the same preference, i.e., which also had negative or positive output weights. By contrast, neutral units did not exhibit any such relationship. The preceding suggests that distinct ensembles of prefrontal neurons provide input to either social or home cage hidden units. We hypothesized that there might be important features of activity in these ensembles that support the classification of social versus home cage behavior. For example, one possibility is that prefrontal neurons which provide input to social units might tend to increase activity during social behavior, whereas prefrontal neurons which provide input to home cage units do the opposite. Surprisingly, this was not the case. In fact, both ensembles of prefrontal neurons significantly increased their activity when mice were engaged in social interaction . Next, we examined pairwise correlations between the activity of prefrontal neurons within each ensemble. Strikingly, mean correlations within the social ensemble increased during social interaction . By contrast, there was a nonsignificant decrease in correlations within the home cage ensemble . Thus, the ensemble of prefrontal neurons which provide input to the social units form an assembly that collectively becomes more coactive . Specifically, we generated different types of synthetic datasets, which encoded 2 different “behavioral states” . Notably, the activity level of every neuron was the same in the original “State A” raster, and these newly created “State B” rasters. State B was distinguished simply by an increase in correlated activity.  We generated synthetic datasets consisting of 100 neurons. Each dataset consisted of 2 activity rasters, corresponding to States “A” and “B.” Each raster contained 6,000 time points . This confirms that this neural network can classify 2 different behaviors even when they are encoded entirely by changes in correlated activity, not by any differences in activity levels. Furthermore, when we swap shuffled the “State B” raster to eliminate these correlations, classifier performance was reduced to chance levels . . Notably, when we used optimal linear classifiers to distinguish between “State A” activity and “State B” activity, either a support vector machine  or logistic regression  we observed chance performance, demonstrating that our neural network classifier was superior for distinguishing states which differ in only the temporal patterning of activity . Thus, in these synthetic datasets, neurons 1 to 50 have higher activity in “State A,” whereas neurons 51–100 have higher activity during “State B.” We varied the proportion of activity that was transferred between neurons. Once again, after training, our neural networks could classify activity patterns corresponding to “State A” versus “State B” . However, in this case, swap shuffling “State B” rasters did not disrupt classifier performance . This confirms that our neural networks classifiers can detect encoding that is based on either activity levels or correlated activity. Swap shuffling a dataset . Thus, our neural network is specifically superior to optimal linear classifiers at distinguishing states which differ in only the temporal patterning of network activity. To understand how the neural network distinguishes activity states, we examined the output weights of each hidden unit that resulted from training the classifier. We first examined classifiers trained on the datasets generated by modulating the activity levels of neurons. These datasets were designed so that activity levels for neurons 1:50 would be higher in State A than State B, whereas activity levels for neurons 51:100 were higher in State B . The neural networks were trained to classify States A and B as “1” and “0,” respectively. We noted that neurons 51:100 . After sorting based on output weights, we binned the hidden units into groups of 50 and calculated the likelihood that each neuron was connected to hidden units within a given bin. We defined 2 vectors corresponding to the probabilities of being connected to the hidden units with the most negative or most positive output weights . Then, we calculated the activity of each subnetwork in frames corresponding to “State A” or “State B.” As expected, the activity of the negative ensemble was higher in State B, whereas activity of the positive ensemble was higher in State A . Thus, over training, the classifier learns to assign positive weights to hidden units that receive the bulk of their input from neurons whose activity increases during frames which should be classified as “1.” Conversely, training assigns negative output weights to hidden units that receive the bulk of their input from neurons that decrease their activity during these frames . Again, we examined the output weights assigned to hidden units during training. Here, we observed 2 clear, but seemingly contradictory, patterns. In some cases, the coactive neurons which participated in the inserted assemblies were more likely to be connected to hidden units with strong negative output weights. Conversely, in other cases, these coactive neurons were more likely to be connected to hidden units with strong positive output weights . As before, we calculated vectors corresponding to the probability that each neuron was connected to hidden units assigned strong negative or positive weights during training to define negative and positive subnetworks. In Example 1, in which the coactive neurons are more likely to be connected to negatively weighted hidden units, activity of the negative subnetwork increases in State B . This is in direct contrast to Example 2, in which the coactive neurons are more likely to be connected to positively weighted hidden units. In Example 2, we observed increased activity of the positive subnetwork during “State B” . How might neural network classifiers utilizing apparently contradictory strategies perform at above chance levels when classifying datasets which differ only in patterns of correlations . For this, we used a method that we published previously: SHuffling Activity to Re-arrange Correlations or SHARC . Like swap shuffling, SHARC also reassigns blocks of activity between neurons, but rather than doing so randomly, it instead follows an algorithm to achieve a target correlation matrix . The full details of SHARC are presented in the Materials and methods section. Briefly, on each iteration, we randomly select one block of activity to be assigned to a new neuron. Instead of choosing the new neuron randomly, we first compute the difference between the target correlation matrix and the correlation matrix of the partially reconstructed surrogate dataset. Then, we assign the block of activity to the neuron which will optimally reduce this difference. Finally, to maintain the mean activity level of each neuron, there is also an absolute limit on how many blocks of activity can be reassigned to each neuron. Notably, when we applied SHARC shuffling to our previously described synthetic datasets, it visibly preserved assemblies of coactive neurons and did not disrupt the ability of neural network classifiers to distinguish between “State A” and “State B” based on either activity levels or correlated activity . Download: PPT PowerPoint slide PNG larger image TIFF original image Fig 5. Correlations transmit additional information beyond that conveyed by changes in activity levels. . Then, we concatenated these shuffled subrasters to create swap or SHARC-shuffled surrogate datasets that preserve behaviorally specific levels of activity, while disrupting or preserving patterns of correlated activity, respectively. Both swap and SHARC-shuffled surrogate datasets preserved levels of activity observed during either social interaction or periods when mice were alone in their home cages. Specifically, we computed the correlation between vectors in which each element represents the activity level of one neuron during one behavioral condition and quantified the correlation . Classifiers performed better than chance when tested with either surrogate dataset indicating that changes in activity levels encode behavioral information, making it possible to distinguish bouts of social interaction from periods when a mouse is alone in its home cage. However, classifier accuracy was significantly higher for SHARC-shuffled surrogates datasets than for swap-shuffled ones . Patterns of correlated activity also help encode mouse identity We wondered whether we could use this approach to study how correlations contribute to encoding of additional information besides just whether or not a mouse was engaged in social interaction. In our behavioral design, the subject mouse interacted with one mouse for 2 epochs and with a second mouse during 2 different epochs. Therefore, we also trained neural networks to classify whether the subject mouse was interacting with Mouse 1 versus Mouse 2. Again, a neural network classifier was able to perform this classification at above-chance levels, and performance was higher when the classifier was tested using SHARC-shuffled surrogate datasets than when tested using swap-shuffled surrogate datasets . This shows that behaviorally modulated patterns of correlated activity transmit additional information, beyond what is readily decodable from activity levels alone. This is important because whereas differences in motor activity or arousal may contribute to distinct activity patterns observed during home cage exploration and social interaction, differences in activity observed during interactions with different mice are not related to nonspecific factors, e.g., the general presence of odors or sounds, but rather must be mouse specific, and thus carry social information. Combinations of coactive neurons occur in a behaviorally specific manner Interestingly, neural networks perform classification better for connection probabilities approximately 0.2 to 0.4 than for connection probabilities <0.1. When the connection probability is low, each hidden unit receives input from individual prefrontal neurons or small groups of neurons. By contrast, when the input probability is higher, hidden units receive input from larger groups of prefrontal neurons. This suggests that training proceeds more efficiently when the network represents information about social versus home cage behavior using multineuron combinations, instead of activity within individual neurons. Therefore, as a proof of concept, we directly examined whether 3-neuron patterns of coactivity occur in a behaviorally specific manner. We examined 3-neuron combinations because they measure network structure beyond pairwise correlations and are the building blocks of larger combinations. One could in principle analyze larger combinations, but because of the limited numbers of neurons and frames in our datasets, there is not always adequate statistical power to resolve larger combinations, i.e., to identify large combinations which occur more often than expected by chance. First, we quantified how often each possible 3-neuron combination occurred in real datasets. Then, we calculated how often each of these combinations occurred in datasets that had been swap shuffled . Thus, the specificity of a combination of coactive neurons for social versus nonsocial behavior does not occur simply because some neurons were only active during one condition, but rather reflects the dynamic reorganization of patterns formed by neurons which are active in both conditions, i.e., changes in correlations. This behaviorally specific occurrence of multineuron patterns of coactivity represents the substrate through which correlations can add to the behavioral information transmitted by neuronal ensembles. Socially enriched combinations are deficient in Shank3 KO mice We were curious whether there might be conditions under which these phenomena—the occurrence of multineuron combinations of coactivity during social behavior and the ability of correlated activity to enhance the transmission of information about social behavior—might be impaired. To explore this, we performed microendoscopic GCaMP imaging in mice lacking the autism-associated gene Shank3 [ 25 – 27 ]. These mice have been extensively studied as models of Phelan–McDermid syndrome, which often includes autism as a clinical feature. Shank3 −/− . Download: PPT PowerPoint slide PNG larger image TIFF original image Fig 6. Shank3 KO mice have disorganized ensembles for which correlations fail to enhance the transmission of information about social behavior. . Scatter plot showing the activity of each neuron during each behavioral condition, expressed as a percentile relative to a null distribution generated by circularly shuffling that neuron’s activity. Activity levels during social interaction or while the mouse was alone in its HC are plotted on the x-axis and y-axis, respectively. Kernel density plots along the axes indicate the fraction of neurons whose activity was at a given percentile of the null distribution. Neurons with activity >90th percentile of shuffled datasets . Thus, Shank3 KO mice recruit abnormal neuronal ensembles during social behavior. We hypothesized that this might reflect a network-level disorganization that affects the normal patterning of activity during social behavior. Indeed, we found that in KO mice, a significantly smaller fraction of the 3-neuron combinations observed during social interaction was strongly enriched, i.e., occur more often in actual data than in 99.9% of swap-shuffled surrogate datasets . This suggests that even though more neurons . The ability of correlated activity to contribute to the encoding of social behavior is disrupted in Shank3 KO mice The preceding shows that even though social behavior robustly recruits neuronal ensembles in Shank3 KO mice, the organization of these ensembles into multineuron combinations is disorganized. This suggests that the ability of patterns of correlated activity to encode information about social behavior may be impaired in these mice. To test this, we examined whether correlated activity contributes to the transmission of information about social behavior in Shank3 KO mice. As before, we generated swap and SHARC-shuffled surrogate datasets, then tested the ability of classifiers trained on the original datasets , indicating a diminished role for correlated activity in encoding . To begin, note that each raster is equivalent to a collection of blocks of activity. Each block of activity is defined by the time at which it begins, its duration, and the neuron which is active. On each iteration, one block of activity is randomly chosen and assigned to a new neuron as follows. Suppose block i has been chosen to be reassigned. First, we find all the blocks of activity that overlap with block i . Next, we selected the subset of these blocks for which new cell identities had already been assigned. Call this set X . Let r j represent the number of time points over which block j ∈ X overlaps with block i , and let n j represent the identity of the cell assigned to block j ∈ X . L i and L j are the lengths of blocks i and j , respectively. Then, we constructed a vector, where represents row j of the target correlation matrix, i.e., the target correlations between neuron n j and the other neurons, and contains the current values of the correlations between neuron n j and the other neurons based on the blocks of activity that have already been reassigned. This step can be thought of as “guessing” which cell should be assigned to a particular block of activity by first figuring out what other cells are active at the same time, then choosing cells which are strongly correlated with these known active cells. Note that we assign values of . Fig 3F and 3G shows changes in activity levels and correlations calculated based on ensembles derived from 1 run in each mouse, then averaged across all mice. Supporting information S1 Fig. Spatial decorrelation of neuronal signals.  S3 Fig. Neural networks classify states which differ in neuronal activity levels using ensembles of neurons that increase/decrease their activity in each state. . The “State B” raster was generated from the State A raster by “inserting” an assembly of coactive neurons . We then identified overlapping combinations occurring during the opposite behavioral condition in which a single neuron was “left out.” In other words, we identified combinations from the 2 conditions that overlapped in exactly 2 neurons. Based on these criteria, 12,408 3-neuron combinations were specifically enriched during social interaction, and 9,572 were specifically enriched during HC exploration. There were 55,696 instances in which a social and nonsocial 3-neuron combination overlapped in 2 out of 3 neurons. In 97.0% of these cases, the neuron which was part of a social 3-neuron combination . Overall, an average of 71 enriched HC combinations contained the neuron missing from the social triplet, and 85 enriched social combinations contained the neuron missing from HC triplets. Right, top: Histogram showing the number of distinct 3 neuron HC combinations that contain the neuron which participates in a social combination but is “left out” during HC behavior. Overall, an average of 71 enriched HC combinations contained the neuron missing from the social triplet. Right, bottom: Histogram showing the number of distinct 3 neuron social combinations that contain the neuron which participates in a HC combination but is “left out” during social interaction. Overall, an average of 85 enriched social combinations contained the neuron missing from HC triplets. HC, home cage.   were not included in this illustrative plot. However, we did not exclude data from these mice in any analyses. WT mice 1–5 were WT littermates of Shank3 KO mice. WT mice 6–10  S1 Data. Data used to generate plots in figures. This Excel file contains multiple sheets, each of which contains the data that were used to generate plots in Figs 1 – 6  and S1 and S3 Figs  Acknowledgments We thank Josh Berke and Ruchi Malik for helpful comments on the manuscript. 